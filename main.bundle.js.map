{"version":3,"sources":["webpack://minskin/./config.js","webpack://minskin/./src/index.js"],"names":["allowLightHellpers","testSkin","testSkinURL","joinLimit","FOV","backgroundColor","dirLightColor","hemLighColor","groundColor","ambientLightStrength","dirLightStrength","hemLightStrength","spotLightStrength","canvas","document","querySelector","spinner","scene","THREE","background","config","fog","camera","window","innerWidth","innerHeight","position","z","lookAt","renderer","antialias","setPixelRatio","devicePixelRatio","shadowMap","enabled","setSize","controls","OrbitControls","ambientLight","add","dl","castShadow","shadow","near","far","set","mapSize","dirLightHelper","hemLight","hemLightHelper","spotLight","spotLightHelper","head","skin","updateSkinMap","url","load","tex","magFilter","minFilter","flipY","image","width","height","traverse","obj","isMesh","material","map","GLTFLoader","skinLocation","gltf","name","y","getElementById","addEventListener","ev","target","files","URL","createObjectURL","Math","abs","getAzimuthalAngle","pos","getCursorPosition","rotJoint","render","remove","animate","undefined","error","console","log","planeGeometry","planeMaterial","color","plane","rotation","x","PI","receiveShadow","clientX","clientY","limitWithinRange","num","min","max","aspect","clientWidth","clientHeight","updateProjectionMatrix","isOrbitControlsActivited","k","enableZoom","ena","update","requestAnimationFrame"],"mappings":"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","file":"main.bundle.js","sourcesContent":["export default {\r\n    allowLightHellpers: false,\r\n    testSkin: false,\r\n    testSkinURL: \"./test.png\",\r\n    joinLimit: 0.8,\r\n    FOV: 60,\r\n    backgroundColor: 0xF2F2F2,\r\n    dirLightColor: 0xFFFFFF,\r\n    hemLighColor: 0x3399CC,\r\n    groundColor: 0xE5EAEF,\r\n    ambientLightStrength: 2.5,\r\n    dirLightStrength: 0.5,\r\n    hemLightStrength: 0.01,\r\n    spotLightStrength: 1\r\n}","import * as THREE from \"three\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport \"./style.scss\"\r\n\r\n// Configuration\r\nimport config from \"../config.js\"\r\n\r\n// Nodes\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst spinner = document.querySelector(\"div.spinner\");\r\n\r\n// Scene Setup\r\nconst scene = new THREE.Scene();\r\nscene.background = new THREE.Color(config.backgroundColor || 0xF2F2F2);\r\nscene.fog = new THREE.Fog(config.backgroundColor || 0xF2F2F2, 1, 40);\r\n\r\n\r\n// Camera Setup\r\nconst camera = new THREE.PerspectiveCamera(config.FOV || 60, window.innerWidth / window.innerHeight, 0.1, 1000);\r\ncamera.position.z = 15;\r\ncamera.lookAt(0, 0, 0)\r\n\r\n// Renderer Setup\r\nconst renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.setSize(window.innerWidth, window.innerHeight, false);\r\n\r\n// Orbit control \r\nconst controls = new OrbitControls(camera, canvas);\r\n\r\n// Ambient Light\r\nconst ambientLight = new THREE.AmbientLight(0x404040, config.ambientLightStrength || 2.5);\r\nscene.add(ambientLight);\r\n\r\n// Direactional Light\r\nconst dl = new THREE.DirectionalLight(config.dirLightColor || 0xFFFFFF, config.dirLightStrength || .5);\r\ndl.castShadow = true;\r\ndl.shadow.camera.near = 0.1;\r\ndl.shadow.camera.far = 1500;\r\ndl.position.set(4, 5, 4);\r\ndl.lookAt(0, 0, 0);\r\ndl.shadow.mapSize = new THREE.Vector2(1024, 1024);\r\nscene.add(dl);\r\n\r\nif (config.allowLightHellpers || false) {\r\n    const dirLightHelper = new THREE.DirectionalLightHelper(dl, 5);\r\n    scene.add(dirLightHelper);\r\n}\r\n\r\n// Hemisphere Light\r\nconst hemLight = new THREE.HemisphereLight(config.hemLighColor || 0x3399CC, 0x44445b, config.hemLightStrength || .1);\r\nif (config.allowLightHellpers || false) {\r\n    const hemLightHelper = new THREE.HemisphereLightHelper(hemLight, 3);\r\n    scene.add(hemLightHelper);\r\n}\r\nscene.add(hemLight);\r\n\r\n// Spot Light\r\nconst spotLight = new THREE.SpotLight(0xffffff, config.spotLightStrength || 0.6);\r\nspotLight.position.set(0, 0, 16);\r\nscene.add(spotLight);\r\n\r\nif (config.allowLightHellpers || false) {\r\n    const spotLightHelper = new THREE.SpotLightHelper(spotLight);\r\n    scene.add(spotLightHelper);\r\n}\r\n\r\n\r\n// Object\r\nconst updateSkinMap = url => {\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(url, tex => {\r\n        tex.magFilter = THREE.NearestFilter;\r\n        tex.minFilter = THREE.LinearMipMapLinearFilter;\r\n        tex.flipY = false;\r\n\r\n        if (tex.image.width === 64 && tex.image.height === 64) skin.traverse(obj => {\r\n            if (obj.isMesh) obj.material.map = tex;\r\n        })\r\n    });\r\n}\r\n\r\n\r\nlet head, skin;\r\nconst loader = new GLTFLoader();\r\nloader.load(config.skinLocation || \"./skin.glb\", gltf => {\r\n    skin = gltf.scene;\r\n\r\n    skin.traverse(obj => {\r\n        obj.castShadow = true;\r\n        if (obj.name === \"head\") head = obj;\r\n    })\r\n    skin.position.y = -.5\r\n\r\n    scene.add(skin);\r\n\r\n    // Event listners\r\n    document.getElementById(\"userImage\").addEventListener(\"change\", ev => {\r\n        const image = ev.target.files[0];\r\n        const url = URL.createObjectURL(image);\r\n        updateSkinMap(url);\r\n    });\r\n\r\n    window.addEventListener(\"mousemove\", ev => {\r\n        // Angle of the camera\r\n        const angle = Math.abs(controls.getAzimuthalAngle());\r\n        if (angle > (config.joinLimit || 0.8)) return\r\n\r\n        const pos = getCursorPosition(ev);\r\n        rotJoint(pos)\r\n        renderer.render(scene, camera);\r\n    });\r\n\r\n    if (config.testSkin || false) updateSkinMap(config.testSkinURL)\r\n\r\n    // Disable loader\r\n    spinner.remove();\r\n    animate();\r\n}, undefined, (error) => console.log(error));\r\n\r\n// Ground\r\nconst planeGeometry = new THREE.PlaneGeometry(1000, 1000, 1000);\r\nconst planeMaterial = new THREE.MeshPhongMaterial({ color: config.groundColor || 0xE5EAEF });\r\nconst plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\nplane.rotation.x = - Math.PI / 2;\r\nplane.position.y = -1.5;\r\nplane.receiveShadow = true;\r\nscene.add(plane);\r\n\r\n// Fellow cursor  stuff\r\nconst getCursorPosition = ev => ({\r\n    x: (ev.clientX / window.innerWidth) * 2 - 1,\r\n    y: - (ev.clientY / window.innerHeight) * 2 + 1\r\n});\r\n\r\nconst rotJoint = pos => {\r\n    // Left Right\r\n    head.rotation.y = limitWithinRange((Math.PI * 2) + (Math.PI / 2 * -pos.x), 6, 6.5) + Math.PI * 2;\r\n\r\n    // Top Bottom\r\n    head.rotation.x = limitWithinRange((Math.PI * 2) - (Math.PI / 2 * pos.y), 6.1, 6.4) + Math.PI;\r\n};\r\n\r\nconst limitWithinRange = (num, min, max) => Math.min(Math.max(num, min), max);\r\n\r\n// Resizing\r\nwindow.addEventListener(\"resize\", () => {\r\n    camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.render(scene, camera);\r\n});\r\n\r\n// Display\r\nlet isOrbitControlsActivited = false;\r\nconst animate = () => {\r\n    if (!isOrbitControlsActivited) zoomInInitally();\r\n\r\n\r\n    camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    requestAnimationFrame(animate);\r\n    renderer.render(scene, camera);\r\n};\r\n\r\n\r\n// Start animation\r\nlet k = .05;\r\nfunction zoomInInitally() {\r\n    if (!isOrbitControlsActivited && camera.position.z > 4 || spotLight.position.z > 4) {\r\n        camera.position.z -= k;\r\n        spotLight.position.z -= k;\r\n        k += 0.01;\r\n    } else {\r\n        isOrbitControlsActivited = true;\r\n        controls.enableZoom = false;\r\n        controls.ena = false;\r\n        controls.update();\r\n    }\r\n}"],"sourceRoot":""}