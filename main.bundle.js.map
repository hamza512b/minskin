{"version":3,"sources":["webpack://minskin/./src/assets/geometry/java.gltf","webpack://minskin/./src/assets/geometry/pocket.gltf","webpack://minskin/./src/assets/textures/steve.png","webpack://minskin/./src/assets/textures/test.png","webpack://minskin/./config.js","webpack://minskin/./src/main/scene.js","webpack://minskin/./src/main/renderer.js","webpack://minskin/./src/main/camera.js","webpack://minskin/./src/main/light.js","webpack://minskin/./src/mesh/ground.js","webpack://minskin/./src/mesh/skin.js","webpack://minskin/./src/api/updateTexture.js","webpack://minskin/./src/api/rotateHead.js","webpack://minskin/./src/index.js"],"names":["scene","THREE","background","config","fog","canvas","document","querySelector","renderer","antialias","setPixelRatio","window","devicePixelRatio","shadowMap","enabled","setSize","innerWidth","innerHeight","camera","position","z","lookAt","lightGrup","ambientLight","add","dirLight","castShadow","shadow","near","far","set","mapSize","hemLight","spotLight","planeGeometry","planeMaterial","color","plane","rotation","x","Math","PI","y","receiveShadow","loader","GLTFLoader","url","Promise","resolve","reject","load","gltf","head","skin","traverse","obj","name","isMesh","material","transparent","alphaTest","tex","magFilter","minFilter","flipY","encoding","image","width","height","map","console","log","limitWithinRange","num","min","max","getCursorPosition","ev","clientX","clientY","rotJoint","joint","pos","spinner","toggleBtn","getElementById","loadSkin","javaUrl","java","pocketUrl","pocket","isJava","light","ground","addEventListener","target","files","URL","createObjectURL","updateTexture","clientWidth","clientHeight","abs","orbit","getAzimuthalAngle","textContent","remove","animate","OrbitControls","isOrbitControlsActivited","k","enablePan","maxDistance","minDistance","maxPolarAngle","requestAnimationFrame","main"],"mappings":"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","file":"main.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"java.gltf\";","export default __webpack_public_path__ + \"pocket.gltf\";","export default __webpack_public_path__ + \"steve.png\";","export default __webpack_public_path__ + \"test.png\";","export default {\r\n    isJava: true,\r\n    allowLightHellpers: false,\r\n    testSkin: false,\r\n    testSkinURL: \"./test.png\",\r\n    joinLimit: 0.8,\r\n    FOV: 60,\r\n    backgroundColor: 0xF2F2F2,\r\n    dirLightColor: 0xFFFFFF,\r\n    hemLighColor: 0x3399CC,\r\n    groundColor: 0xE5EAEF,\r\n    ambientLightStrength: 3,\r\n    dirLightStrength: 0.5,\r\n    hemLightStrength: .2,\r\n    spotLightStrength: .8\r\n}","import * as THREE from \"three\";\r\nimport config from \"../../config\";\r\n\r\nconst scene = new THREE.Scene();\r\nscene.background = new THREE.Color(config.backgroundColor || 0xF2F2F2);\r\nscene.fog = new THREE.Fog(config.backgroundColor || 0xF2F2F2, 1, 40);\r\n\r\nexport default scene;","import * as THREE from \"three\";\r\n\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.setSize(window.innerWidth, window.innerHeight, false);\r\n\r\nexport default renderer;","import * as THREE from \"three\";\r\nimport config from \"../../config\";\r\n\r\nconst camera = new THREE.PerspectiveCamera(config.FOV || 60, window.innerWidth / window.innerHeight, 0.1, 1000);\r\ncamera.position.z = 15;\r\ncamera.lookAt(0, 0, 0)\r\n\r\nexport default camera;","import * as THREE from \"three\";\r\nimport config from \"../../config\";\r\n\r\nconst lightGrup = new THREE.Group();\r\n\r\n// Ambient Light\r\nexport const ambientLight = new THREE.AmbientLight(0x404040, config.ambientLightStrength || 2.5);\r\nlightGrup.add(ambientLight);\r\n\r\n// Direactional Light\r\nexport const dirLight = new THREE.DirectionalLight(config.dirLightColor || 0xFFFFFF, config.dirLightStrength || .5);\r\ndirLight.castShadow = true;\r\ndirLight.shadow.camera.near = 0.1;\r\ndirLight.shadow.camera.far = 1500;\r\ndirLight.position.set(4, 5, 4);\r\ndirLight.lookAt(0, 0, 0);\r\ndirLight.shadow.mapSize = new THREE.Vector2(1024, 1024);\r\nif (config.allowLightHellpers || false) {\r\n    const dirLightHelper = new THREE.DirectionalLightHelper(dirLight, 5);\r\n    lightGrup.add(dirLightHelper);\r\n}\r\nlightGrup.add(dirLight);\r\n\r\n// Hemisphere Light\r\nexport const hemLight = new THREE.HemisphereLight(config.hemLighColor || 0x3399CC, 0x44445b, config.hemLightStrength || .1);\r\nif (config.allowLightHellpers || false) {\r\n    const hemLightHelper = new THREE.HemisphereLightHelper(hemLight, 3);\r\n    lightGrup.add(hemLightHelper);\r\n}\r\nlightGrup.add(hemLight);\r\n\r\n// Spot Light\r\nexport const spotLight = new THREE.SpotLight(0xffffff, config.spotLightStrength || 0.6);\r\nspotLight.position.z = 16;\r\nlightGrup.add(spotLight);\r\nexport default lightGrup;","import * as THREE from \"three\";\r\nimport config from \"../../config\";\r\n\r\nconst planeGeometry = new THREE.PlaneGeometry(1000, 1000, 1000);\r\nconst planeMaterial = new THREE.MeshPhongMaterial({ color: config.groundColor || 0xE5EAEF });\r\nconst plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\nplane.rotation.x = - Math.PI / 2;\r\nplane.position.y = -1.5;\r\nplane.receiveShadow = true;\r\n\r\nexport default plane;","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\nconst loader = new GLTFLoader();\r\nconst loadSkin = (url) => {\r\n  return new Promise((resolve, reject) => {\r\n    loader.load(url, gltf => {\r\n      const skin = gltf.scene;\r\n      let head;\r\n      skin.position.y = -.5\r\n      skin.traverse(obj => {\r\n        obj.castShadow = true;\r\n        if (obj.name === \"head\") return head = obj;\r\n        if (obj.isMesh) {\r\n          obj.material.transparent = true;\r\n          obj.material.alphaTest = 0.5;\r\n        }\r\n    });\r\n      resolve({ skin, head })\r\n    }, null, reject);\r\n  });\r\n};\r\n\r\nexport default loadSkin;\r\n","import * as THREE from \"three\";\r\n\r\n// update texture\r\nexport default (skin, url) => {\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(url, tex => {\r\n        tex.magFilter = THREE.NearestFilter;\r\n        tex.minFilter = THREE.LinearMipMapLinearFilter;\r\n        tex.flipY = false;\r\n        tex.encoding = THREE.sRGBEncoding;\r\n\r\n        if (tex.image.width === 64 && tex.image.height === 64) {\r\n            skin.traverse(obj => {\r\n                if (obj.isMesh) obj.material.map = tex;\r\n            })\r\n        } else console.log(\"Not a texture\");\r\n    });\r\n}\r\n","const limitWithinRange = (num, min, max) => Math.min(Math.max(num, min), max);\r\n\r\n// Fellow cursor  stuff\r\nexport const getCursorPosition = ev => ({\r\n    x: (ev.clientX / window.innerWidth) * 2 - 1,\r\n    y: - (ev.clientY / window.innerHeight) * 2 + 1\r\n});\r\n\r\nexport const rotJoint = (joint, pos) => {\r\n    // Left Right\r\n    joint.rotation.y = limitWithinRange((Math.PI * 2) + (Math.PI / 2 * -pos.x), 6, 6.5) + Math.PI * 2;\r\n\r\n    // Top Bottom\r\n    joint.rotation.x = limitWithinRange((Math.PI * 2) - (Math.PI / 2 * pos.y), 6.1, 6.4) + Math.PI;\r\n};","// Webpack\r\nimport javaUrl from \"./assets/geometry/java.gltf\";\r\nimport pocketUrl from \"./assets/geometry/pocket.gltf\";\r\nimport steveText from \"./assets/textures/steve.png\";\r\nimport testText from \"./assets/textures/test.png\";\r\n\r\n\r\n// Threejs\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n// Style\r\nimport \"./style.scss\"\r\n\r\n// Main\r\nimport scene from \"./main/scene\";\r\nimport renderer from \"./main/renderer\"\r\nimport camera from \"./main/camera\"\r\nimport light from \"./main/light\";\r\n\r\n// Meshes\r\nimport ground from \"./mesh/ground\"\r\nimport loadSkin from \"./mesh/skin\"\r\nimport updateTexture from './api/updateTexture';\r\nimport { getCursorPosition, rotJoint } from './api/rotateHead';\r\nimport config from '../config';\r\n\r\n// Nodes\r\nconst spinner = document.querySelector(\"div.spinner\");\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst toggleBtn = document.getElementById(\"changeEdtion\");\r\n\r\n// Main \r\nasync function main() {\r\n    try {\r\n        const java = (await loadSkin(javaUrl));\r\n        const pocket = (await loadSkin(pocketUrl));\r\n        let isJava = config.isJava;\r\n\r\n        // Add Stuff\r\n        scene.add(light);\r\n        scene.add(ground);\r\n        scene.add(isJava ? java.skin : pocket.skin);\r\n\r\n        // Event listners\r\n        let url;\r\n        document.getElementById(\"userImage\").addEventListener(\"change\", ev => {\r\n            const image = ev.target.files[0];\r\n            url = URL.createObjectURL(image);\r\n            updateTexture(isJava ? java.skin : pocket.skin, url);\r\n        });     \r\n\r\n        window.addEventListener(\"resize\", () => {\r\n            camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.render(scene, camera);\r\n        });\r\n\r\n        window.addEventListener(\"mousemove\", ev => {\r\n            // Angle of the camera\r\n            const angle = Math.abs(orbit.getAzimuthalAngle());\r\n            if (angle > (config.joinLimit || 0.8)) return\r\n\r\n            const pos = getCursorPosition(ev);\r\n            rotJoint(isJava ? java.head : pocket.head, pos)\r\n            renderer.render(scene, camera);\r\n        });\r\n\r\n        toggleBtn.textContent = isJava ? \"Java Edtion\" : \"Pocket Edtion\";\r\n        toggleBtn.addEventListener(\"click\", () => {\r\n            if (isJava) {\r\n                scene.remove(java.skin);\r\n                scene.add(pocket.skin);\r\n                updateTexture(pocket.skin, url);\r\n            }\r\n            else {\r\n                scene.remove(pocket.skin);\r\n                scene.add(java.skin);\r\n                updateTexture(java.skin, url);\r\n            }\r\n            isJava = !isJava;\r\n            toggleBtn.textContent = isJava ? \"Java Edtion\" : \"Pocket Edtion\";\r\n        });\r\n\r\n        // Display\r\n        renderer.render(scene, camera);\r\n        spinner.remove();\r\n        if (config.testSkin) updateTexture(skin, config.testSkinURL)\r\n\r\n        // Animation\r\n        animate();\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n// Display\r\nconst orbit = new OrbitControls(camera, canvas);\r\nlet isOrbitControlsActivited = false, k = .05;\r\norbit.enabled = false;\r\norbit.enablePan = false;\r\norbit.maxDistance = 10;\r\norbit.minDistance = 1;\r\norbit.maxPolarAngle = 1.9;\r\n// Start animation\r\nconst animate = () => {\r\n    if (!isOrbitControlsActivited) {\r\n        if (camera.position.z > 4) {\r\n            camera.position.z -= k;\r\n            k += 0.01;\r\n        } else {\r\n            orbit.enabled = true;\r\n            isOrbitControlsActivited = true;\r\n        }\r\n    }\r\n\r\n    camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    requestAnimationFrame(animate);\r\n    renderer.render(scene, camera);\r\n};\r\n\r\nmain();"],"sourceRoot":""}